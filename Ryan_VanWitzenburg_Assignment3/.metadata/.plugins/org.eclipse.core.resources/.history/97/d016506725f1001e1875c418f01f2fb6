package practiceProblems;

import java.util.Arrays;
import java.util.Collections;

import org.apache.commons.lang3.tuple.Pair;

public class Exercise5Pair<E extends Number> {

	 public static void main(String[] args) {
	        // Sample usage
	        Exercise5Pair<Number> test = new Exercise5Pair<>();
	        Number[] arr = {1, 3, 5, 7, 9};
	        Number target = 5;
	        Pair<Number, Number> result = test.lessOrGreater(arr, target);
	        System.out.println("Numbers less than or equal to " + target + ": " + result.getLeft());
	        System.out.println("Numbers strictly greater than " + target + ": " + result.getRight());
	    }
	    
	    public Pair<Number, Number> lessOrGreater(Number[] arr, Number target) {
	        int index = Collections.binarySearch(Arrays.asList(arr), target);
	        int lessOrEqualCount = 0;
	        int strictlyGreaterCount = 0;
	        
	        if (index >= 0) {
	            // If the target exists in the array, count how many elements are less than or equal to it
	            for (int i = 0; i <= index; i++) {
	                if (arr[i].doubleValue() <= target.doubleValue()) {
	                    lessOrEqualCount++;
	                }
	            }
	            // Count how many elements are strictly greater than the target
	            strictlyGreaterCount = arr.length - lessOrEqualCount;
	        } else {
	            // If the target doesn't exist in the array, find the insertion point
	            index = -index - 1;
	            lessOrEqualCount = index;
	            strictlyGreaterCount = arr.length - index;
	        }
	        
	        return Pair.of(lessOrEqualCount, strictlyGreaterCount);
	    }
}
