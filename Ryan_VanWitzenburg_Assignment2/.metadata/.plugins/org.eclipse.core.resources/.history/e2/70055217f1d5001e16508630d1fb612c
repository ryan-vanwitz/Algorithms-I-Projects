package implementation;

import java.util.Arrays;
import structures.RemovalArray;

public class DoublingArray<E> implements RemovalArray<E> {
	
	private Object[] items;
	private int size;
	
	public DoublingArray() {
		this.items = new Object[1];
		this.size = 0;
	}
	
	public boolean add(E e) {
		if (items.length == size) {
			items = Arrays.copyOf(items, items.length * 2);
		}
		items[size] = e;
		size++;
		return true;
	}
	
	public boolean remove(int index) {
		if (index >= size || index < 0) {
			throw new IndexOutOfBoundsException("Failed removing element. Index Out Of Bounds");
		}
		for (int i = index; i < size - 1; i++) {
	            items[i] = items[i + 1];
	        }
	    items[size - 1] = null; // Nullify the last element
	    size--; // Decrement size
	    return true;
	}
	
	public boolean remove(E e) {
		for (int i = 0; i < size; i++) {
            if (items[i].equals(e)) {
                remove(i);
                return true;
            }
        }
		return false;
	}
	
	 public E find(int index) {
	        if (index < 0 || index >= size) {
	            throw new IndexOutOfBoundsException("Index out of bounds");
	        }
	        return (E) items[index];
	    }

	    public int size() {
	        return size;
	    }
	    
	    public void clear() {
	        items = new Object[1]; 
	        size = 0;
	    }
}
